{"version":3,"sources":["components/cartas/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cartitas","idx","incendio","className","days","name","area","App","React","data","setData","loading","setLoading","reload","setReload","setTimeout","console","log","map","item","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAkBeA,EAhBE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SACvB,OACE,sBAAeC,UAAU,UAAzB,UACGD,EAASE,KAAO,GACf,sBAAMD,UAAU,QAAhB,4BAEA,sBAAMA,UAAU,WAAhB,+BAGF,6BAAKD,EAASG,OACd,iDACA,+BAAOH,EAASI,SATRL,ICwDCM,MAtDf,WAAgB,IAAD,EACWC,WAAe,IAD1B,mBACNC,EADM,KACAC,EADA,OAEiBF,YAAe,GAFhC,mBAENG,EAFM,KAEGC,EAFH,OAIeJ,YAAe,GAJ9B,mBAINK,EAJM,KAIEC,EAJF,KAqCb,OAhCAN,aAAgB,WACdO,YAAW,WACTL,EAAQ,CACN,CACEL,KAAM,mBACNC,KAAM,iBACNF,KAAM,IAER,CACEC,KAAM,qBACNC,KAAM,iBACNF,KAAM,GAER,CACEC,KAAM,kBACNC,KAAM,iBACNF,KAAM,IAER,CACEC,KAAM,WACNC,KAAM,kBACNF,KAAM,MAGVQ,GAAW,KACV,OACF,IAEHJ,aAAgB,WACdQ,QAAQC,IAAI,yBACX,CAACJ,IAEAF,EACK,+CAIP,gCACE,kDACA,gCACGF,EAAKS,KAAI,SAACC,EAAMlB,GACf,OAAO,cAAC,EAAD,CAAUA,IAAKA,EAAKC,SAAUiB,OAEvC,wBAAQC,QAAS,kBAAMN,GAAWD,IAAlC,sCC1COQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.009fbd25.chunk.js","sourcesContent":["import * as React from \"react\";\n\nconst Cartitas = ({ idx, incendio }) => {\n  return (\n    <div key={idx} className=\"cartita\">\n      {incendio.days > 15 ? (\n        <span className=\"grave\">Incendio grave</span>\n      ) : (\n        <span className=\"reciente\">Incendio reciente</span>\n      )}\n\n      <h5>{incendio.name}</h5>\n      <b>da√±o actual: </b>\n      <span>{incendio.area}</span>\n    </div>\n  );\n};\n\nexport default Cartitas;\n","import * as React from \"react\";\n\nimport \"./App.css\";\n\nimport Cartitas from \"./components/cartas\";\n\nfunction App() {\n  const [data, setData] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  const [reload, setReload] = React.useState(false);\n  React.useEffect(() => {\n    setTimeout(() => {\n      setData([\n        {\n          name: \"Selva la candona\",\n          area: \"20km cuadrados\",\n          days: 20,\n        },\n        {\n          name: \"Sureste de Oceania\",\n          area: \"40km cuadrados\",\n          days: 5,\n        },\n        {\n          name: \"Selva del congo\",\n          area: \"50km cuadrados\",\n          days: 10,\n        },\n        {\n          name: \"Amazonas\",\n          area: \"100km cuadrados\",\n          days: 40,\n        },\n      ]);\n      setLoading(false);\n    }, 2000);\n  }, []);\n\n  React.useEffect(() => {\n    console.log(\"Me estoy ejecutando\");\n  }, [reload]);\n\n  if (loading) {\n    return <div>CARGANDO....</div>;\n  }\n\n  return (\n    <div>\n      <h1>Alerta Incendios</h1>\n      <div>\n        {data.map((item, idx) => {\n          return <Cartitas idx={idx} incendio={item} />;\n        })}\n        <button onClick={() => setReload(!reload)}>Ejecutar de nuevo</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}